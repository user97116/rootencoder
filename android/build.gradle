group 'com.example.rootencoder'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: 'com.android.library'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.example.rootencoder'
    }

    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 21
    }

    dependencies {
        // S4J
        implementation "org.slf4j:slf4j-api:1.7.32"
        // Ktor Networking
        implementation "io.ktor:ktor-client-core:3.0.0"
        implementation "io.ktor:ktor-network:3.0.0"
        implementation "io.ktor:ktor-network-tls:3.0.0"
        implementation "io.ktor:ktor-io:3.0.0"
        implementation "io.ktor:ktor-utils:3.0.0"
//        implementation 'com.github.pedroSG94.RootEncoder:library:2.5.4'
        // RootEncoder
        implementation files('libs/library-debug.aar')
        implementation files('libs/common-release.aar')
        implementation files('libs/encoder-debug.aar')
        implementation files('libs/rtmp-release.aar')
        implementation files('libs/udp-release.aar')
        implementation files('libs/extra-sources-release.aar')
//        implementation 'com.github.pedroSG94.RootEncoder:library:f0b9aa3fcb'
//        implementation 'com.github.pedroSG94.RootEncoder:library:2.5.2'
//        implementation 'com.github.pedroSG94.RootEncoder:extra-sources:2.5.2'
//        implementation 'androidx.annotation:annotation:1.1.0'
//        implementation files('/snap/current/flutter/bin/cache/artifacts/engine/android-x64/flutter.jar')
        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.mockito:mockito-core:5.12.0'
    }

    testOptions {
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
configurations {
    all {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
}
